#!/bin/bash
#
#SBATCH --chdir=/path/mafft/CIalign        # Set the working directory to where input and output files are located.
#SBATCH --job-name=CIAlign                 # Name the job "CIAlign".
#SBATCH --partition=long                   # Use the "long" partition for jobs that need extended runtime.
#SBATCH --array=1-353%10                   # Create a job array with task IDs from 1 to 353, running up to 10 tasks simultaneously.
#SBATCH --ntasks=1                         # Allocate one task per array job (CIAlign runs a single task per file).
#SBATCH --cpus-per-task=10                 # Assign 10 CPU cores to each task for faster processing.
#SBATCH --mem=3G                           # Allocate 3GB of memory for each task.
#SBATCH --mail-user=email@kew.org          # Email address to receive job notifications.
#SBATCH --mail-type=END,FAIL               # Send email notifications when the job ends or fails.

# Print the current task ID (useful for debugging and logging).
echo $SLURM_ARRAY_TASK_ID

# Extract the name of the gene file for the current task ID from the Gene_names.txt file.
# 'lineid' corresponds to the task ID, and the script retrieves the matching line.
name=$(awk -v lineid=$SLURM_ARRAY_TASK_ID 'NR==lineid{print;exit}' /path/scripts/Gene_names.txt)

# Print the name of the gene file being processed (useful for logging and debugging).
echo $name

# Run CIAlign with specified options.
CIAlign \
  --infile /path/mafft/CIalign/"$name"_alM.fasta \            # Specify the input alignment file for the current gene.
  --outfile_stem /path/mafft/CIalign/"$name".CIalign.fasta \  # Define the stem for the output files generated by CIAlign.
  --remove_divergent \                                        # Remove sequences that are too divergent.
  --remove_divergent_minperc 0.85 \                           # Set the minimum percentage identity threshold for divergence.
  --retain_str /path/scripts/outgroups.txt \                  # Specify sequences to retain, even if they are divergent.
  --plot_input --plot_output --plot_markup                    # Generate plots for the input, output, and alignment markups.
